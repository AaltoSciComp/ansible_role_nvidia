---
# tasks file for ansible_role_nvidia

- name: add nvidia CUDA repo
  ansible.builtin.yum_repository:
    name: cuda
    description: NVIDIA CUDA YUM Repo
    baseurl: "{{ nvidia_driver_rhel_cuda_repo_baseurl }}"
    gpgkey: "{{ nvidia_driver_rhel_cuda_repo_gpgkey }}"


- name: Switch DNF nvidia-driver stream to the chosen branch
  ansible.builtin.command:
    cmd: "dnf -y module enable nvidia-driver:{{ nvidia_driver_branch }}"

- name: install nvidia management library from rpm repository
  ansible.builtin.dnf:
    name: "{{nvidia_driver_nvml_package_name}}{{ '-' + nvidia_driver_version if nvidia_driver_version is defined else '' }}"
    state: latest
    install_weak_deps: "{{ nvidia_install_weak_deps }}"
  when: nvidia_install_nvml

- name: Make certain that libnvidia-ml.so-symlink exists
  ansible.builtin.file:
    src: /usr/lib64/libnvidia-ml.so.1
    dest: /usr/lib64/libnvidia-ml.so
    owner: root
    group: root
    state: link
  when: nvidia_install_nvml

- name: Install nvidia drivers
  block:

  - name: install precompiled nvidia drivers from rpm repository
    ansible.builtin.dnf:
      name:
        - "nvidia-driver{{ '-' + nvidia_driver_version if nvidia_driver_version is defined else '' }}"
        - "nvidia-driver-cuda{{ '-' + nvidia_driver_version if nvidia_driver_version is defined else '' }}"
        - "nvidia-fabric-manager{{ '-' + nvidia_driver_version if nvidia_driver_version is defined else '' }}" # this is needed for our H200s Will be enabled by an ww4 overlay.
      state: latest
      install_weak_deps: "{{ nvidia_install_weak_deps }}"

  - name: blacklist nouveau
    community.general.kernel_blacklist:
      name: nouveau
      state: present


  - name: create persistenced override dir
    ansible.builtin.file:
      path: /etc/systemd/system/nvidia-persistenced.service.d/
      state: directory
      recurse: yes

  - name: configure persistenced service to turn on persistence mode
    ansible.builtin.template:
      src: nvidia-persistenced-override.conf.j2
      dest: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
    when: nvidia_driver_persistenced

  - name: remove persistenced service override
    ansible.builtin.file:
      path: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
      state: absent
    when: not nvidia_driver_persistenced

  - name: enable persistenced
    ansible.builtin.systemd:
      name: nvidia-persistenced
      enabled: yes
    when: nvidia_driver_persistenced

  - name: set module parameters
    ansible.builtin.template:
      src: nvidia.conf.j2
      dest: "{{ nvidia_driver_module_file }}"
      mode: '0644'

  when: nvidia_install_driver


- name: Install nvidia MIG parted
  block:


  - name: install precompiled nvidia mig-parted RPM from github
    ansible.builtin.dnf:
      name:
        - "https://github.com/NVIDIA/mig-parted/releases/download/v{{ nvidia_mig_parted_version }}/nvidia-mig-manager-{{ nvidia_mig_parted_version }}-1.x86_64.rpm"
      disable_gpg_check: yes
      state: present

  - name: Ensure slurmd service override directory exists
    ansible.builtin.file:
      path: /etc/systemd/system/slurmd.service.d
      state: directory
      mode: '0755'

  - name: Create or update override to start slurmd after nvidia-mig-manager
    ansible.builtin.copy:
      dest: /etc/systemd/system/slurmd.service.d/nvidia-mig-manager-dep.conf
      content: |
        # Ansible managed (ansible_role_nvidia)
        [Unit]
        After=nvidia-mig-manager.service
        Wants=nvidia-mig-manager.service
      mode: '0644'
      owner: root
      group: root

  when: nvidia_install_mig_parted|default(False)
